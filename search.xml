<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C#调用pyd</title>
    <url>/mqzzzz.github.io/post/296ae744.html</url>
    <content><![CDATA[<p>转自: <a href="https://www.cnblogs.com/degc/p/13995247.html">C#调用pyd - 人类的实例 - 博客园 (cnblogs.com)</a></p>
<p>python打包成pyd在本篇博客不多叙述，请读者自行百度，本篇博客主要讲解在C#中如何调用pyd以及遇到的一些问题如何解决。</p>
<h2 id="1-安装pythonnet"><a href="#1-安装pythonnet" class="headerlink" title="1.安装pythonnet"></a>1.安装pythonnet</h2><p>pythonnet是一个强大的工具包，用于C#代码与python代码进行交互，不仅可以实现在C#中调用python，也可以实现在python中调用C#.</p>
<p>GitHub：<a href="https://github.com/pythonnet/pythonnet">https://github.com/pythonnet/pythonnet</a></p>
<ul>
<li>首先打开nuget包管理器：<br><img data-src="https://res.aimon.cc/img/20201130164610.png" alt="Alt"></li>
<li>根据你python的版本下载对应的pythonnet，笔者使用的是python3.6，所以下载的是py36。<br><img data-src="https://res.aimon.cc/img/20201130164611.png" alt="Alt"></li>
</ul>
<h2 id="2-调用pyd中的模块"><a href="#2-调用pyd中的模块" class="headerlink" title="2.调用pyd中的模块"></a>2.调用pyd中的模块</h2><ul>
<li>首先引用pythonnet：</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Python.Runtime;</span><br></pre></td></tr></table></figure>

<ul>
<li>调用pyd的模块：</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//All calls to python should be inside a using (Py.GIL()) &#123;/* Your code here */&#125; block.</span></span><br><span class="line"><span class="keyword">using</span> (Py.GIL())</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//Import python modules using dynamic mod = Py.Import(&quot;mod&quot;), then you can call functions as normal.</span></span><br><span class="line">	<span class="comment">//All python objects should be declared as dynamic type.</span></span><br><span class="line">	<span class="built_in">dynamic</span> np = Py.Import(<span class="string">&quot;test_pyd&quot;</span>);</span><br><span class="line">	np.hello();</span><br><span class="line">	Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://res.aimon.cc/img/20201130164612.png" alt="Alt"></p>
<ul>
<li>python代码：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    print(<span class="string">&quot;Hello world&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="3-可能出现的问题及解决方案"><a href="#3-可能出现的问题及解决方案" class="headerlink" title="3.可能出现的问题及解决方案"></a>3.可能出现的问题及解决方案</h2><ul>
<li>环境变量的配置，环境变量的对应路径的python版本需要与你下载的pythonnet包版本是相同的：<br><img data-src="https://res.aimon.cc/img/20201130164613.png" alt="Alt"><br>笔者电脑中有不同版本的python，经过笔者测试后发现更换版本最简单的方式是替换环境变量的顺序，笔者是在win10系统下进行的测试，其他系统未进行过测试。<br>另外要注意你的pyd如果是使用64位编译的，则环境变量对应的python版本也需要是64位的。<br>当python368在上时：<br><img data-src="https://res.aimon.cc/img/20201130164614.png" alt="Alt"><br>当python378在上时：<br><img data-src="https://res.aimon.cc/img/20201130164615.png" alt="Alt"></li>
<li>System.DllNotFoundException:“无法加载 DLL“python36”: 找不到指定的模块。<br><img data-src="https://res.aimon.cc/img/20201130164616.png" alt="Alt"><br>解决方案：将python文件夹中的python36.dll复制到debug目录下<br><img data-src="https://res.aimon.cc/img/20201130164617.png" alt="Alt"></li>
<li>Python.Runtime.PythonException:“ModuleNotFoundError : No module named ‘test_pyd’”</li>
</ul>
<p><img data-src="https://res.aimon.cc/img/20201130164618.png" alt="Alt"><br>解决方案：将test_pyd.pyd放入debug目录下<br><img data-src="https://res.aimon.cc/img/20201130164619.png" alt="Alt"></p>
<ul>
<li>System.MissingMethodException:“Method not found: ‘System.Reflection.Emit.AssemblyBuilder System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)’.”<br><img data-src="https://res.aimon.cc/img/20201130164620.png" alt="Alt"><br>解决方案：该问题是由于.NET框架所导致的，笔者在使用.NET Core 3.1的时候就会出现这个错误，更换为.NET Framework 4.7.2后问题解决。<br><img data-src="https://res.aimon.cc/img/20201130164621.png" alt="Alt"><br><img data-src="https://res.aimon.cc/img/20201130164622.png" alt="在这里插入图片描述"></li>
</ul>
]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>c#</tag>
      </tags>
  </entry>
  <entry>
    <title>IdentityServer4脱坑记录</title>
    <url>/mqzzzz.github.io/post/31c3f66a.html</url>
    <content><![CDATA[<p>由于是老项目升级.net5比较费劲，又需要加入ids，过程比较曲折</p>
<p>终归还是配置问题</p>
<p>V4版本需要设置以下属性才能兼容.net framework webapi</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">options.EmitStaticAudienceClaim = <span class="literal">true</span></span><br><span class="line">options.AccessTokenJwtType = <span class="string">&quot;JWT&quot;</span></span><br></pre></td></tr></table></figure>

<p>V3版本需要设置一下属性才能兼容.net framework webapi</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">options.EmitLegacyResourceAudienceClaim = <span class="literal">true</span></span><br><span class="line">options.AccessTokenJwtType = <span class="string">&quot;JWT&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>IdentityServer</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo新建博文</title>
    <url>/mqzzzz.github.io/post/884863d2.html</url>
    <content><![CDATA[<h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><p>创建一篇新的文章，输入如下命令，其中title替换成你的文章标题</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> hexo new title</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> hexo new post title</span><br></pre></td></tr></table></figure>

<h4 id="实际运行"><a href="#实际运行" class="headerlink" title="实际运行"></a>实际运行</h4><p>可以看到创建的文件在/source/_posts路径下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">D:\hexo\blog&gt;hexo new 我的第一篇博文 </span><br><span class="line">INFO  Created: D:\hexo\blog\source\_posts\<span class="number">2019</span><span class="literal">-06</span><span class="literal">-24</span>-我的第一篇博文.md</span><br><span class="line">D:\hexo\blog&gt;hexo new post <span class="string">&quot;My Second Blog&quot;</span></span><br><span class="line">INFO  Created: D:\hexo\blog\source\_posts\<span class="number">2019</span><span class="literal">-06</span><span class="literal">-24</span><span class="literal">-My</span><span class="literal">-Second</span><span class="literal">-Blog</span>.md</span><br></pre></td></tr></table></figure>

<p>打开创建的MarkDown文件，默认内容如下，我们可以在新建的文件里用MarkDown语法编辑文章</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">--- </span><br><span class="line">title: 我的第一篇博文 </span><br><span class="line">date: 2019-06-24 20:05:55 </span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora完全使用教程</title>
    <url>/mqzzzz.github.io/post/9eac314.html</url>
    <content><![CDATA[<h2 id="一、Typora基本语法指南"><a href="#一、Typora基本语法指南" class="headerlink" title="一、Typora基本语法指南"></a>一、Typora基本语法指南</h2><h3 id="Typora简介"><a href="#Typora简介" class="headerlink" title="Typora简介"></a>Typora简介</h3><p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p>
<ul>
<li>Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。</li>
<li>Markdown的语法因不同的解析器或编辑器而异，Typora使用的是GitHub Flavored Markdown。</li>
</ul>
<h3 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h3><ul>
<li>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li>
<li>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</li>
<li>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</li>
<li>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</li>
</ul>
<h3 id="Typora基本技巧"><a href="#Typora基本技巧" class="headerlink" title="Typora基本技巧"></a>Typora基本技巧</h3><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul>
<li>加粗： <code>Ctrl + B</code></li>
<li>撤销： <code>Ctrl + Z</code></li>
<li>字体倾斜 ：<code>Ctrl+I</code></li>
<li>下划线：<code>Ctrl+U</code></li>
<li>多级标题： <code>Ctrl + 1~6</code></li>
<li>有序列表：<code>Ctrl + Shift + [</code></li>
<li>无序列表：<code>Ctrl + Shift + ]</code></li>
<li>降级快捷键 ：<code>Tab</code></li>
<li>升级快捷键：<code>Shift + Tab</code></li>
<li>插入链接： <code>Ctrl + K</code></li>
<li>插入公式： <code>Ctrl + Shift + M</code></li>
<li>行内代码： <code>Ctrl + Shift + K</code></li>
<li>插入图片： <code>Ctrl + Shift + I</code></li>
<li>返回Typora顶部：<code>Ctrl+Home</code></li>
<li>返回Typora底部 ：<code>Ctrl+End</code></li>
<li>创建表格 ：<code>Ctrl+T</code></li>
<li>选中某句话 ：<code>Ctrl+L</code></li>
<li>选中某个单词 ：<code>Ctrl+D</code></li>
<li>选中相同格式的文字 ：<code>Ctrl+E</code></li>
<li>搜索: <code>Ctrl+F</code></li>
<li>搜索并替换 ：<code>Ctrl+H</code></li>
<li>删除线 ：<code>Alt+Shift+5</code></li>
<li>引用 ：<code>Ctrl+Shift+Q</code></li>
<li>生成目录：<code>[TOC]+Enter</code></li>
</ul>
<p>注：一些实体符号需要在实体符号之前加” \ ”才能够显示</p>
<h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>输入[TOC]即可产生菜单，菜单会自动更新</p>
<h3 id="区域元素"><a href="#区域元素" class="headerlink" title="区域元素"></a>区域元素</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">YAML FONT Matters</span><br></pre></td></tr></table></figure>

<p>在文章的最上方输入—，按换行键产生，然后在里面输入内容即可。</p>
<h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>按换行键[Enter]建立新的一行,按<code>Shift</code>+<code>Enter</code>可以创建一个比段落间距更小的行间距。可在行尾插入打断线，禁止向后插入</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">打断线&lt;br/&gt;后面的内容将自动换行</span><br></pre></td></tr></table></figure>

<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>开头#的个数表示，空格+文字。标题有1~6个级别，#表示开始，按换行键结束</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 一级标题 快捷键为 Ctrl + 1</span><br><span class="line">## 二级标题 快捷键为 Ctrl + 2</span><br><span class="line">......</span><br><span class="line">###### 六级标题 快捷键为 Ctrl + 6</span><br></pre></td></tr></table></figure>

<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>斜体以**或__括住</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">*这是斜体字体1*_这是斜体字体2_</span><br></pre></td></tr></table></figure>

<p><em>这是斜体字体1</em><br><em>这是斜体字体2</em></p>
<p>加粗<br>开头<code>**</code>，结尾<code>**</code>。<br>或者开头<code>__</code>,结尾<code>__</code>(两个短横线)。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">**这是加粗字体1** __这是加粗字体2__</span><br></pre></td></tr></table></figure>

<p>这是加粗字体1<br>这是加粗字体2</p>
<p>删除线<br>开头<code>~~</code>，结尾<code>~~</code>。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">~~这是错误文字~~</span><br></pre></td></tr></table></figure>

<p>这是错误文字</p>
<p>下划线使用HTML标签<u>下划线</u></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure>

<p>下划线</p>
<p>高亮<br><code>==内容==</code>，需要自己在偏好设置里面打开这项功能</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">==高亮==</span><br><span class="line">高亮</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>行内输入代码块快捷键： <code>Ctrl + Shift + K</code></p>
<ol>
<li>开头```+语言名，开启代码块，换行键换行，光标下移键跳出<br>示例：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">print(&quot;hello,python!&quot;&quot;)</span><br></pre></td></tr></table></figure>

<ol>
<li>用两个`在正常段落中表示代码<br>例如：</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Use the `printf()`function.</span><br></pre></td></tr></table></figure>

<p>Use the <code>printf()</code>function.</p>
<h3 id="数学式"><a href="#数学式" class="headerlink" title="数学式"></a>数学式</h3><p>打开Typora选择数学模块</p>
<ul>
<li>点击“段落”—&gt;“公式块”</li>
<li>快捷键Ctrl+Shift+m</li>
<li><code>“$$”+回车</code></li>
</ul>
<p>以上三种方式都能打开数学公式的编辑栏。</p>
<p>示例：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">输入$，然后按ESC键，之后输入Tex命令，可预览</span><br><span class="line">例如：</span><br><span class="line">$\lim_&#123;x\to\infty&#125;\exp(-x)=0$</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-c0139796d5848b706c9f2f4d79c7a749_720w.png" alt="img"></p>
<p>下标使用~~括住内容。需要自己在偏好设置里面打开这项功能</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">H~2~O</span><br></pre></td></tr></table></figure>

<p>H2O</p>
<p>上标</p>
<p>使用^括住内容。需要自己在偏好设置里面打开这项功能</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">y^2^=4</span><br></pre></td></tr></table></figure>

<p>y2=4</p>
<h3 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h3><p>Typora语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">以:开始，然后输入表情的英文单词,以：结尾，将直接输入该表情.例如：</span><br><span class="line">:smile</span><br><span class="line">:cry</span><br><span class="line">:happy</span><br></pre></td></tr></table></figure>

<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>开头|+列名+|+列名+|+换行键，创建一个2*2表格，<code>Ctrl+Enter</code>可建立新行。</p>
<p>示例：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">|第一列|第二列|</span><br></pre></td></tr></table></figure>

<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>输入 <code>***</code> 或者 <code>---</code>,按换行键换行，即可绘制一条水平线。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">***---</span><br></pre></td></tr></table></figure>

<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>开头&gt;表示，空格+文字，按换行键换行，双按换行跳出</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 引注1</span><br><span class="line">&gt; ···</span><br><span class="line">&gt; 引注2</span><br><span class="line">&gt;还有一行，双按换行键跳出引注模式</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<blockquote>
<p>引注1<br>···<br>引注2还有一行，双按换行键跳出引注模式</p>
</blockquote>
<p>普通引用</p>
<blockquote>
<p>空格 + 引用文字：在引用的文字前加&gt;+空格即可，引用可以嵌套。</p>
</blockquote>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 这行可以不加，新起一行都要加上哦</span><br><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<blockquote>
<p>引用文本前使用 [大于号+空格]这行可以不加，新起一行都要加上哦<br>这是引用的内容<br>这是引用的内容</p>
</blockquote>
<p>列表中使用</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">* 第一项   </span><br><span class="line">&gt; 引用1    </span><br><span class="line">&gt; 引用2</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<ul>
<li>第一项</li>
</ul>
<blockquote>
<p>引用1引用2</p>
</blockquote>
<ul>
<li>第二项</li>
</ul>
<p>引用里嵌套引用</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 </span><br><span class="line">&gt; 嵌套一层引用</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure>

<p>引用里嵌套列表</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure>

<p>引用里嵌套代码块</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块</span><br></pre></td></tr></table></figure>
<blockquote>
<p>或者使用 ``` 形成代码块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">### 脚注</span><br><span class="line"></span><br><span class="line">在需要添加脚注的文字后面+[+^+序列+]，注释的产生可以鼠标放置其上单击自动产生，添加信息</span><br><span class="line"></span><br><span class="line">或人工添加+[+^+序列+]+:</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">脚注产生的方法[^footnote].</span><br><span class="line">[^footnote]:这个就是&quot;脚注&quot;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>脚注的产生方法[1]</p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>链接<br>输入网址，单击链接，展开后可编辑<br>ctr+单击，打开链接<br>例如：<a href="https://link.zhihu.com/?target=https://www.baidu.com">https://www.baidu.com</a></p>
<p>常用链接方法</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">文字链接 [链接名称](http://链接网址)网址链接 &lt;http://链接网址&gt;</span><br></pre></td></tr></table></figure>

<p>示例效果：百度</p>
<p>超链接</p>
<p>格式1：用[ ]括住要超链接的内容，紧接着用( )括住超链接源+名字，超链接源后面+超链接命名<br>同样ctrl+单击，打开链接例如：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是[百度](https://www.baidu.com)官网</span><br></pre></td></tr></table></figure>

<p>这是 百度官网格式2：超链接 title可加可不加</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure>

<p>This is an example inline link.This link has no title attribute.</p>
<p>高级链接技巧</p>
<p>使用[+超链接文字+]+[+标签+]，创建可定义链接<br>ctrl+单击，打开链接。示例1：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是[百度][id][id]:https://www.baidu.com</span><br></pre></td></tr></table></figure>

<p>这是百度示例2：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）  </span><br><span class="line">[1]: http://www.google.com/  </span><br><span class="line">[yahoo]: http://www.yahoo.com/</span><br></pre></td></tr></table></figure>

<h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>用&lt;&gt;括住url，可手动设置url对于标准URLs，可自动识别</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;www.baidu.com&gt;</span><br></pre></td></tr></table></figure>

<p>&lt;<a href="http://www.baidu.com&gt;/">www.baidu.com&gt;</a></p>
<h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><p>开头*/+/- 加空格+文字，可以创建无序序列，换行键换行，删除键+shift+tab跳出<br>开头1.加空格+后接文字，可以创建有序序列例：</p>
<ul>
<li>第一个无序序列</li>
<li>第二个无序序列</li>
<li>······</li>
</ul>
<ol>
<li>第一个有序序列</li>
<li>第二个有序序列</li>
<li>······</li>
</ol>
<p>可选序列</p>
<p>开头序列+空格+[ ]+空格+文字，换行键换行，删除键+shift+tab跳出例如：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">- [ ] 第一个可选序列</span><br><span class="line">- [ ] 第二个可选序列</span><br><span class="line">- [ ] 第三个可选序列</span><br><span class="line">- [x] 第四个可选序列</span><br></pre></td></tr></table></figure>

<ul>
<li>第一个可选序列</li>
<li>第二个可选序列</li>
<li>第三个可选序列</li>
<li>第四个可选序列<br>总结：先输入减号，然后输入空格，之后就变成了黑色圆点，在输入[]，在中间加个空格，回车就可以注：任务列表无快捷键，可以点击菜单栏段落，任务列表。</li>
</ul>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><blockquote>
<p>Typora文本文档中有使用图片内容，如果需要发布在各个兼容Markdown的软件平台，需要预先上传文档中的图片至图床，再通过对图床的图片链接调用，才能正常显示，否则各个平台将无法看到该文档图片。<br>免费图床网址：<a href="https://sm.ms/">https://sm.ms/</a>图床设置：[Typora图床自动上传图片设置篇]</p>
</blockquote>
<ol>
<li>手动添加：跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">![图片名称](http://图片网址)</span><br></pre></td></tr></table></figure>

<ol>
<li>当然，你也可以像网址那样对图片网址使用变量</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">然后在文档的结尾位变量赋值（网址） </span><br><span class="line"></span><br><span class="line">[1]: http://www.google.com/logo.png</span><br></pre></td></tr></table></figure>

<ol>
<li>除了以上2种方式之外，还可以直接将图片拖拽进来，自动生成链接。</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png &quot;图片标题&quot;)</span><br><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png)</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="二、Typora图床设置篇章"><a href="#二、Typora图床设置篇章" class="headerlink" title="二、Typora图床设置篇章"></a>二、Typora图床设置篇章</h2><p>Typora文本文档中有使用图片内容，如果需要发布在各个兼容Markdown的软件平台，需要预先上传文档中的图片至图床，再通过对图床的图片链接调用，才能正常显示，否则各个平台将无法看到该文档图片。</p>
<blockquote>
<p>图床意义：就是专门用来存放图片，同时允许你把图片对外连接的网上空间，不少图床都是免费的。</p>
</blockquote>
<h3 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h3><p>Typora : markdown 文档写作工具</p>
<p>PicGo : 图床工具</p>
<p>七牛云/腾讯云/阿里云等</p>
<h3 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h3><h3 id="1-下载所需软件"><a href="#1-下载所需软件" class="headerlink" title="1. 下载所需软件"></a>1. 下载所需软件</h3><p><a href="https://typora.io/">Typora</a></p>
<p><a href="https://molunerfinn.com/PicGo/">PicGo</a></p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132148802.png" alt="image-20200427103351795"></p>
<p>安装完成如下图所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132148904.png" alt="image-20200427104505410"></p>
<p>如果无法下载可以使用以下百度云：</p>
<p>链接：<a href="https://pan.baidu.com/s/1JRDb4iojTMAV5WBFHahRaw">https://pan.baidu.com/s/1JRDb4iojTMAV5WBFHahRaw</a> 提取码：gkt9</p>
<h3 id="2-配置-PicGo"><a href="#2-配置-PicGo" class="headerlink" title="2. 配置 PicGo"></a>2. 配置 PicGo</h3><p>2.1 打开软件， 图床 -&gt; 七牛云</p>
<p><img data-src="https://img-blog.csdnimg.cn/2020042713214973.png" alt="image-20200427105128957"></p>
<p>2.2 配置七牛云图床</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132149270.png" alt="image-20200427105207374"></p>
<p>七牛云的配置购买很简单，可以通过<a href="https://portal.qiniu.com/signup?code=1hjikucr9mmoi">以下链接</a>直接购买并使用，</p>
<p>具体配置如何购买及配置域名相关流程可以参考文章<a href="https://www.jianshu.com/p/29f33ca6e491">OpenWrite 编辑器如何配置七牛云</a></p>
<p>2.3 通过 2.2 的链接购买七牛云之后，到七牛云的界面进行配置</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132149446.png" alt="image-20200427105806627"></p>
<p>2.4 上传文件，检验是否配置成功</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132149620.png" alt="image-20200427110554767"></p>
<p>打开图片的URL</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132149752.png" alt="image-20200427110655283"></p>
<p>将URL 复制到浏览器，图片能访问</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132150279.png" alt="image-20200427110805895"></p>
<p>至此 PicGo 配置完成</p>
<h3 id="3-配置-Typora"><a href="#3-配置-Typora" class="headerlink" title="3. 配置 Typora"></a>3. 配置 Typora</h3><p>3.1 文件 -&gt; 偏好设置</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132150429.png" alt="image-20200427104723594"></p>
<p>3.2 偏好设置 -&gt; 图像</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132150567.png" alt="image-20200427104754064"></p>
<p>3.3 配置 PicGo 图片上传</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132150705.png" alt="image-20200427104832421"></p>
<p><img data-src="https://img-blog.csdnimg.cn/20200427132150903.png" alt="image-20200427111638750"></p>
<p>3.4 验证 PicGo 是否成功</p>
<p><img data-src="https://img-blog.csdnimg.cn/2020042713215149.png" alt="image-20200427111338710"></p>
<p>以上所有都配置完成，可以愉快的用 Typora + PicGo 写 Markdown 文档了 </p>
]]></content>
      <categories>
        <category>typora</category>
      </categories>
      <tags>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>测试文章</title>
    <url>/mqzzzz.github.io/post/7a6a6b5a.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal 终极美化</title>
    <url>/mqzzzz.github.io/post/ec878511.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
</search>
